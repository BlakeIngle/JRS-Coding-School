variable - something in code that is a value - that you can reference - it is changable
identifier - the 'name' of a variable - the technical term

operator - + - * / % = == >= < != === ^ ? : && || 
operand - the pieces of the operation that are not the operator

logical comparisons - == === < > && ||
                    - special operators that perform logical operations
                    - == , === comparisons (equivalency) === is strict
                    - <  less than
                    - &&  ||  -   AND  OR
                    ***   ! (not) will flip a boolean

decleration - state that a variable exists
initialization - assign a value to the variable (the very first time)
assignment - giving a variable a new value
reference - looking back at the value of a variable that is declared 

keyword - reserved word defined by the programming language and its libraries
literal - a literal value directly in your code ex: 5, "5", "Hello world!", [], true
datatype - type of data, number, string, boolean, ...

type casting - turn a value from one data type to another data type

compile - put code into assembly language and then machine language
        - checking for errors - seeing if syntax is correct
execute - running the program

syntax - the grammar of the language specified by the developers 
        of the language. How the computer interprets all of the characters.
comment - notes in your code that are not executed (nor compiled)
        - // in line comment
        - /* 
           * block        starts with /*
           * style 
           * comment      ends with */
           */

library - a file or files that have functions defined that we can use in our programs

increment/decrement - add or subtract 1 with ++ or --
concatenation - combining two or more strings (string 'addition')

function - reusable, predefined instructions that can be executed
                multiple times
         - functions require a name, parameters, and a return value

scope - how much vision does the program have - can it see my variables?

global variable - a variable on the top level scope "kinda has no scope" - can be used in the whole "file"
local variable - varaible in scope - meaning the local code block has access to this variable 

(the) call stack - basically a to do list for the computer 
                - created when a function is called
(stack) overflow - when you run out of memory because you kept calling too many functions
        (you're recursive function is infinite)
out of bounds - an index that does not exist in an array

enumeration / enums - a constant set of values in a predefined list

primitive - basic 'building block' of data - ex. number, string, boolean
non-primitive - a complex data stucture made up of primitive data
              - a pointer or reference to another value - ex. array, obj

truthy / falsey - interpreting a non boolean value as either 
        true or false. Coercing a non boolean into a boolean.
